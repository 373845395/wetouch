<!--banner7.ui-->
<template>
  <ui-view>
    <ui-page top="261">
      <ui-nav-bar class="nab_bar" slot="nav-bar" ui:show="{{ isShow }}">
        <ui-row height="46">
          <ui-col vertical-align="middle" align="left" space-left="10" width="35" bindtap="navigateBack">
            <ui-view class="nav_left">
                <ui-icon type="arrow-left" size="16" color="#fff"></ui-icon>
            </ui-view>
          </ui-col>
          <ui-col vertical-align="middle" align="center">
            <ui-view class="nav_title"></ui-view>
          </ui-col>
          <ui-col vertical-align="middle" align="center" width="35"></ui-col>
        </ui-row>
      </ui-nav-bar>
      <ui-fixed-view top="211" left="0" right="0">
        <ui-view class="tabsbox">
          <ui-tabs tab-style="color:#6b6b6b" active-tab-style="color:#BA3240" index="{{ current }}"  bindchange="handleChange($event, 'current')" ink-bar ink-bar-style="{{ { borderBottom: '2px solid #BA3240', width: '45%' } }}">
            <ui-tab>章节</ui-tab>
            <ui-tab>详情</ui-tab>
            <ui-tab>评论</ui-tab>
            <ui-tab>问答</ui-tab>
            <ui-tab>笔记</ui-tab>
          </ui-tabs>
      </ui-view>
      </ui-fixed-view>
      <ui-fixed-view top="0" left="0" right="0">
        <ui-video id="myVideo" page-gesture="true" objectFit="cover" style="width:100%;height:211px;" src="{{ videoSrc }}"
      danmu-btn="{{false}}" controls bindplay="bindplay" bindcontrolschange="bindcontrolschange"></ui-video>
      </ui-fixed-view>
      
      <ui-view ui:show="show1">
          <ui-sticky class="header" show="{{ show1 }}">
            <ui-view class="sticky_title">第一章 如何在不同的浏览器上查看元素</ui-view>
            <ui-view slot="sticky">
              <ui-view class="sticky_title">第一章 如何在不同的浏览器上查看元素</ui-view>
            </ui-view>
          </ui-sticky>
          <ui-view class="course_list">
            <ui-view ui:for="{{course_02}}">{{ item.title }}</ui-view>
          </ui-view>
          <ui-sticky class="header" show="{{ show1 }}">
            <ui-view class="sticky_title">第二章 CSS选择器定位</ui-view>
            <ui-view slot="sticky">
              <ui-view class="sticky_title">第二章 CSS选择器定位</ui-view>
            </ui-view>
          </ui-sticky>
          <ui-view class="course_list">
            <ui-view ui:for="{{ course_02 }}">{{ item.title }}</ui-view>
          </ui-view>
          <ui-sticky class="header" show="{{ show1 }}">
            <ui-view class="sticky_title">第三章 XPath定位及实践练习</ui-view>
            <ui-view slot="sticky">
              <ui-view class="sticky_title">第三章 XPath定位及实践练习</ui-view>
            </ui-view>
          </ui-sticky>
          <ui-view class="course_list">
            <ui-view ui:for="{{ course_03 }}">{{ item.title }}</ui-view>
          </ui-view>
      </ui-view>

      <ui-view ui:show="show2">
          2
      </ui-view>

      <ui-view ui:show="show3">
          3
      </ui-view>

      <ui-view ui:show="show4">
          4
      </ui-view>

      <ui-view ui:show="show5">
          5
      </ui-view>
    </ui-page>
  </ui-view>
</template>
    

<script>
// banner6.js
var videoContext
export default {
  config: {
    "navigationStyle": "custom",
    "scrollType": "div",
    "delay":true
  },
  data () {
    return {
      // videoSrc: 'http://images.uileader.com/20171024/392f790e-4c5b-4909-83dd-d13e94bcd64f.mp4',
      videoSrc: 'http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400',
      isShow: true,
      navState: true,
      show1:true,
      show2:false,
      show3:false,
      show4:false,
      show5:false,
      course_01:[{
        title:'1-1 课程介绍'
      },{
        title:'1-2 如何用火狐开发者工具查看元素'
      },{
        title:'1-3 火狐的Add On-TryXpath'
      },{
        title:'1-4 如何用Chrome开发者工具查看元素'
      },{
        title:'1-5 获取默认xpath或CSS技巧'
      }],
      course_02:[{
        title:'2-1 用CSS Selector - IDs定位元素'
      },{
        title:'2-2 用多个CSS Classes定位元素'
      },{
        title:'2-3 用CSS 通配符定位元素'
      },{
        title:'2-4 用CSS 定位子节点'
      }],
      course_03:[{
        title:'3-1 Xpath中绝对路径相对路径的区别'
      },{
        title:'3-2 如何构建一个有效的Xpath'
      },{
        title:'3-3 用Text构建有效的Xpath'
      },{
        title:'3-4 用Contains关键字构建有效的Xpath'
      },{
        title:'3-5 用StartWith关键字构建有效的Xpath'
      },{
        title:'3-6 如何查找到父节点和平级节点'
      },{
        title:'3-7 实践练习'
      },{
        title:'3-8 本章中面试问题'
      }],
      current: 0,
      DEFAULT_HEADER_HEIGHT:ui.DEFAULT_HEADER_HEIGHT
    }
  },
  methods: {
    onReady: function (res) {
      videoContext = ui.createVideoContext('myVideo')
    },
    bindplay (e) {
      if (e.detail.show === undefined) {
        this.isShow = true
      }
    },
    bindcontrolschange (e) {
      if (this.navState) {
        this.navState = false
      } else {
        this.isShow = e.detail.show
      }
    },
    navigateBack () {
      ui.navigateBack()
    },
    handleChange (index, key) {
      console.log(index)
      // this[key] = index
      if(index === 0){
        this.show1 = true
        this.show2 = false
        this.show3 = false
        this.show4 = false
        this.show5 = false
      }else if(index === 1){
        this.show1 = false
        this.show2 = true
        this.show3 = false
        this.show4 = false
        this.show5 = false
      }else if(index === 2){
        this.show1 = false
        this.show2 = false
        this.show3 = true
        this.show4 = false
        this.show5 = false
      }else if(index === 3){
        this.show1 = false
        this.show2 = false
        this.show3 = false
        this.show4 = true
        this.show5 = false
      }else if(index === 4){
        this.show1 = false
        this.show2 = false
        this.show3 = false
        this.show4 = false
        this.show5 = true
      }
    },
    handleContentChange (index, key) {
      this[key] = index
    },
  },
  mounted () {
    console.log(this.data1)
    this.onReady()
  }
}

</script>

<style lang="less">
.nav_left{
  width:25px;
  height:25px;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.5);
  line-height:25px;
  text-align:center;
}

.sticky_title{
  font-size: 14px;
  color: #989898;
  padding: 0 10px;
  line-height:45px;
  background-color: #fff;
}
.course_list{
  padding: 0 20px;
  .ui-view{
    font-size: 14px;
    color: #989898;
    line-height:45px;
  }
}
.tabsbox{
  box-shadow: 0px -2px 14px 0px #ccc;
  background-color: #fff;
  height:50px;
}
.video_wrap{
  position: fixed;
  top:0;
  height:211px;
  width:100%;
}
/* .ui-tabs{
  position: fixed;
  z-index: 482;
  width: 100%;
  top:211px;
  box-shadow: 0px -2px 14px 0px #ccc;
  background-color: #fff;
  // margin-bottom: 5px;
  .swiper-slide{
    line-height: 50px;
    font-size: 14px;
    color: #6b6b6b;
    &.active{
      color: #BA3240;
    }
  }
} */
</style>
