<!--uploadDownload.ui-->
<template>
  <ui-page>
    <ui-view class="sample_title">上传的文件不能超过200k</ui-view>
    <ui-view class="page-body">
      <ui-view class="page-body-wording">
        <ui-view class="page-body-div">
          点击选择文件上传
        </ui-view>
        <ui-view>
          <ui-button bindtap="chooseImage" type="primary" disabled="{{loading}}" loading="{{loading}}">选择上传</ui-button>
        </ui-view>
      </ui-view>
      <ui-view class="progress_win" style="display:none;">
        <ui-progress percent="{{ progress }}" stroke-width="3" color="#ff4949"></ui-progress>
      </ui-view>
      <ui-view class="code">
        <ui-view class="title">服务器返回：</ui-view>
        <pre>{{msg}}</pre>
      </ui-view>
      <ui-view class="page-body-wording">
        <ui-view class="page-body-div">
          点击按钮下载上传的图片
        </ui-view>
      </ui-view>
      <ui-view>
        <ui-button bindtap="downloadImage" type="primary" disabled="{{loading}}" loading="{{loading}}">下载</ui-button>
      </ui-view>
      <ui-view class="preview">
        <ui-image src="{{imageSrc}}" width="200" height="200" mode="aspectFit"></ui-image>
      </ui-view>
    </ui-view>
  </ui-page>
</template>

<script>
// uploadDownload.js
const uploadFileUrl = 'http://www.uileader.com/touchui-backstage/uploadImgSubmit.do'
// const uploadFileUrl = 'http://192.168.1.109:8080/touchui-backstage/uploadImgSubmit.do'
var uploadTask
export default {
  config: {
    "navigationBarTitleText": "照片上传下载"
  },
  data () {
    return {
      loading: false,
      loading2: false,
      msg: '',
      imageSrc: '',
      downurl: '',
      progress: 0
    }
  },
  methods: {
    chooseImage () {
      var self = this
      ui.chooseImage({
        count: 1,
        sizeType: ['compressed'],
        sourceType: ['album'],
        success: function (res) {
          var imageSrc = res.tempFilePaths[0]
          uploadTask = ui.uploadFile({
            url: uploadFileUrl,
            filePath: imageSrc,
            name: 'file',
            success: function (res) {
              self.downurl = res.data.toString()
              if (self.downurl === '10000') {
                self.msg = '上传文件不能超过200k'
              } else if (self.downurl === '40000') {
                self.msg = '请添加上传文件'
              } else if (self.downurl === '50000') {
                self.msg = '上传图片失败'
              } else {
                self.msg = '上传成功。' + self.downurl
              }
            },
            fail: function ({ errMsg }) {
              ui.showAlert({
                title: errMsg
              })
              self.msg = '上传失败。' + errMsg
            },
            complete: function () {}
          })
          uploadTask.onProgressUpdate((res) => {
            self.progress = res.progress
          })
        },
        fail: function ({ errMsg }) {
        }
      })
    },
    downloadImage () {
      var self = this
      ui.downloadFile({
        url: self.downurl,
        success: function (res) {
          self.imageSrc = self.downurl
        },
        fail: function ({ errMsg }) {
        },
        complete: function () {
          self.loading2 = false
        }
      })
    }
  }
}

</script>

<style lang="less">
  // uploadDownload.less
.page-body{
  padding: 10px;
}
.page-body-wording {
  padding: 10px 0;
  font-size: 24px;
  color: #333;
}
.progress_win{
  width: 100%;
  // position: absolute;
  // left: 0;
  // bottom: 0;
  padding: 0 3px;
}
.page-body-div {
  text-align: center;
}

.code {
  margin-top: 10px;
  padding: 0 10px;
  .title {
    padding: 5px;
    font-size: 16px;
  }
  pre {
    padding: 5px;
    color: #3399ff;
    font-size: 12px;
    overflow-x: scroll;
  }
}
.preview{
  .mix-flex-x-center();
}
</style>